image: golang:1.20

stages:
  - build
  - test
  - dependency

after_script:
  - cd $CI_PROJECT_DIR
  - sudo ./ci/cleanup.sh

build:
  tags:
    - sm_ci
  stage: build
  script:
    - echo "-------   Start Build   -------"
    - /usr/local/go/bin/go build

install_cni:
  tags:
    - sm_ci
  stage: build
  script:
    - mkdir -p $HOME/go/src/
    - cd $HOME/go/src/
    - git clone https://${AOS_FIREWALL_TOKEN}@gitpct.epam.com/epmd-aepr/aos_cni_firewall.git
    - cd $HOME/go/src/aos_cni_firewall/plugins/meta/aos-firewall
    - /usr/local/go/bin/go build
    - sudo cp -f $HOME/go/src/aos_cni_firewall/plugins/meta/aos-firewall/aos-firewall /opt/cni/bin

    - cd $HOME/go/src/
    - git clone https://${AOS_DNS_TOKEN}@gitpct.epam.com/epmd-aepr/aos_cni_dns.git
    - cd $HOME/go/src/aos_cni_dns/plugins/meta/dnsname/
    - /usr/local/go/bin/go build
    - sudo cp -f $HOME/go/src/aos_cni_dns/plugins/meta/dnsname/dnsname /opt/cni/bin
  after_script:
    - rm -rf $HOME/go/src/aos_cni_firewall
    - rm -rf $HOME/go/src/aos_cni_dns

test:
  tags:
    - sm_ci
  stage: test
  script:
    - sudo iptables -P FORWARD ACCEPT
    - echo "-------   Run Unit tests   -------"
    - sudo -E /usr/local/go/bin/go test $(/usr/local/go/bin/go list ./... | grep -v "/vendor") -p=1 -failfast -v -coverprofile .testCoverage.txt
    - /usr/local/go/bin/go tool cover -func=.testCoverage.txt
    - sudo rm .testCoverage.txt

test_crun:
  tags:
    - sm_ci
  stage: test
  script:
    - echo "-------   Run Launcher Unit tests with crun   -------"
    - sudo -E AOS_RUNNER=crun /usr/local/go/bin/go test aos_servicemanager/launcher -p=1 -failfast -v

whitesource:
  only:
    refs:
      - master
      - develop
  tags:
    - sm_ci
  stage: dependency
  script:
    - java -jar /usr/bin/wss-unified-agent.jar -apiKey $WSS_API_KEY -projectToken $WSS_SM_TOKEN -userKey $WSS_USER_KEY  -c ./ci/wss-sm.conf -d ./ -scanComment $CI_COMMIT_SHORT_SHA
